---
version: '3.7'
services:
  mysql-order:
    image: mysql:8.3
    container_name: mysql-order
    environment:
      MYSQL_DATABASE: order
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    ports:
      - '3306:3306'
    volumes:
      - ./db_volumes/mysql-order:/var/lib/mysql
  mysql-inventory:
    image: mysql:8.3
    container_name: mysql-inventory
    environment:
      MYSQL_DATABASE: inventory
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    ports:
      - '3307:3306'
    volumes:
      - ./db_volumes/mysql-inventory:/var/lib/mysql
  mongo-product:
    image: mongo:latest
    container_name: mongo-product
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - '27017:27017'
    volumes:
      - ./db_volumes/mongodb_data_container:/data/db
      - ./db_volumes/mongodb_config_container:/data/configdb

  discovery-server:
    build: ./discovery-server
    container_name: discovery-server
    ports:
      - '8761:8761'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  api-gateway:
    build: ./gateway
    container_name: api-gateway
    ports:
      - '8181:8080'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
  order-service:
    build: ./order-service
    container_name: order-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zookeeper
      - broker
      - mysql-order
      - discovery-server
  inventory-service:
    build: ./inventory-service
    container_name: inventory-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql-inventory
      - discovery-server
  notification-service:
    build: ./notification-service
    container_name: notification-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - broker
      - zookeeper
  product-service:
    build: ./product-service
    container_name: product-service
    depends_on:
      - discovery-server
      - mongo-product
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - product-service
      - inventory-service
      - order-service
      - notification-service

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password